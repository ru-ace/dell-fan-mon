.TH dell-fan-mon 1 "05 Jan 2019" "ace" Utilities
.SH "NAME"
dell-fan-mon \- temperature monitor for Dell Laptops
.SH "DISCLAIMER"
This program calls undocumented functions of Dell SMM BIOS by defaults.
.br
\fBUSE ON YOUR OWN RISK\fP
.SH "SYNOPSIS"
dell-fan-mon [\fIOPTION\fP]...
.SH "DESCRIPTION"
The dell-fan-mon is a daemon that monitors cpu and gpu temperatures, and controls the fan speed on some Dell laptops. 
.br
It does that by means of regularly reading the system temperature, and choosing appropriate speed of the fans. 
.LP
All options can be customized at \fB/etc/dell-fan-mon.conf\fP, or via command-line options
.LP
On Debian and derivated OSes, dell-fan-mon starts in the background by default as a service.
.SH "ACCESS MODE"
dell-fan-mon can access for temp and fan control with two modes (\fB--mode\fR <\fImode\fP>):
.IP \[bu] 2
\fImode\fP 0: use dell-smm-hwmon(i8k) kernel module. This mode is more safety and can be used by unprivileged user.
.IP \[bu] 
\fImode\fP 1: use direct SMM BIOS calls. To use this mode, dell-fan-mon needs root privileges (default) 
.SH "DISABLE BIOS FAN CONTROL"
dell-fan-mon can try disable BIOS fan control with two methods(\fB--bios_disable_method\fR <\fImethod\fP>):
.IP \[bu] 2
\fImethod\fP 0: don't disable bios. dell-fan-mon checks and controls fans state (see \fBfan_check_period\fR option) (default)
.IP \[bu]
\fImethod\fP 1: using code from \fIhttps://github.com/clopez/dellfan\fP
.IP \[bu]
\fImethod\fP 2: identical with \fIhttps://github.com/TomFreudenberg/dell-bios-fan-control\fP
.LP
To use this feature, dell-fan-mon needs root privileges.
.LP
Before set this option in config file, stop dell-fan-mon (sudo service dell-fan-mon stop) and try every method in verbose mode
(sudo dell-fan-mon -v --bios_disable_method 2 --fan_ctrl_logic_mode 0).
Wait until cpu temp will be greater \fBt_mid\fR and fans was on.
If during cpu temp lowering BIOS doesn't try change fan state: seems this method works.
.LP
If you cant disable bios fan control, please pay attention to \fBfan_ctrl_logic_mode 1\fR
.LP
On exit (SIGTERM, SIGINT) dell-fan-mon set fans speed to max and try to restore BIOS fan control with corresponding \fImethod\fP 
.LP
Use \fImethod\fP 0 for disable this feature. In \fImethod\fP 0 dell-fan-mon checks and controls fan state. 
.br
Check \fBfan_check_period\fR options.

.SH "LAPTOPS WITH DISCRETE GPU"
dell-fan-mon supports monitoring discrete GPU temp (\fB--discrete_gpu_mode\fR <\fImode\fP>) with 3 modes:
.IP \[bu] 2
\fImode\fP 0: monitor cpu_temp only (for integrated GPU) 
.IP \[bu]
\fImode\fP 1: use temp = max(cpu_temp, gpu_temp) in fan control logic (default)
.IP \[bu]
\fImode\fP 2: use separate fans control (for laptops with dedicated fan for discrete gpu)
.LP
dell-fan-mon supports two methods for obtaining GPU temp:
.IP \[bu] 2
Using direct SMM BIOS calls(\fB--mode 1\fR) dell-fan-mon try to autodetect GPU temp sensor.
If autodetection failed \fBdiscrete_gpu_mode\fR automatically switch to \fB0\fR (monitor cpu_temp only). 
If it happened for you: please use second method.
.IP \[bu]
Using third party console utility. Set \fBget_gpu_temp_cmd\fR options in config file.
In this case you need provide command which output one line with one number (GPU temp)

\fImode\fP 2 use \fBgpu_fan_id\fR options, that also attempt to automatically detect using the SMM BIOS(\fB--mode 1\fR). 
You can switch back to \fB--mode 0\fR if you setting \fBget_gpu_temp_cmd\fR, \fBfans_count\fR amd \fBgpu_fan_id\fR manualy 
(you can find \fBgpu_fan_id\fR values in verbose mode after successed autodetection)
.LP
If you have discrete GPU it's good idea to run dell-fan-mon in verbose mode to be sure that autodetection works fine.

.SH "FAN CONTROL LOGIC"
dell-fan-mon has two modes of fans control logic(\fB--fan_ctrl_logic_mode\fR <\fImode\fP>) regarding 3 temperature thresholds \fBt_low\fR, \fBt_mid\fR, \fBt_high\fR and corresponding fan states \fBt_low_fan\fR, \fBt_mid_fan\fR, \fBt_high_fan\fR:
.IP \[bu] 2
\fImode\fP 0: Full control logic (with default t_*_fan)
.RS
.IP \[bu] 2 
When temperature rising:
    if temp in [t_low,t_mid] and fan_state = OFF: fan_state = OFF
    if temp > t_mid: fan_state = LOW
    if temp > t_high: fan_state = HIGH
.IP \[bu]
When temperature lowering:
    if temp < t_low: fan_state = OFF
    if temp in [t_low,t_mid] and fan_state = LOW: fan_state = LOW
    if temp in [t_low, t_high] and fan_state = HIGH: fan_state = HIGH

.IP \[bu]
Real code:
    if (temp <= cfg.t_low)
        fan_state = cfg.t_low_fan;
    else if (temp > cfg.t_high)
        fan_state = cfg.t_high_fan;
    else if (temp >= cfg.t_mid)
        fan_state = fan_state > cfg.t_mid_fan ? fan_state : cfg.t_mid_fan;
.RE

.IP \[bu]
\fImode\fP 1 (default): Simple logic which allow BIOS to control fans. Stop/start fans оnly at boundary temps
    if temp < t_low: fan_state = t_low_fan
    if temp > t_high: fan_state = t_high_fan
.SH "ABNORMAL TEMP JUMP DETECTION"
dell-fan-mon has buildin mechanism for detect abnormal cpu temp jumps: short(1-2 seconds) cpu temp jumps on +20/+30 celsius which are cause of starting fans. You can control it via \fB--jump_temp_delta\fR and \fB--jump_timeout\fR options.
.LP
To disable this feature set \fBjump_temp_delta\fR to 100.

.SH "OPTIONS"
.LP
dell-fan-mon accepts the following command\-line options
.TP
\fB\-h\fR, \fB\-\-help\fR
Show help and current values of all options. Before showing help programm load /etc/dell-fan-mon.conf. So it can be used for config file validation.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Report hardware status and program actions on stdout.
.TP
\fB\-m\fR, \fB\-\-monitor_only\fR
Report hardware status on stdout in get_only mode. Enable verbose output.
.TP
\fB\-d\fR, \fB\-\-daemon\fR
Reports child PID in stdout and detach from console. Please don't use this option, until you know what you do: current version of the startup scripts works only with default value. Default is 0 (foreground mode).
.TP
\fB\-t\fR, \fB\-\-test\fR
Useful for scripts. If init code works without errors - exits with code 0, otherwise - outputs error in stdout and exits with code 1.  
.TP
\fB--mode\fR <\fImode\fP>
Set mode for accessing temp and fan controls. Default is 1.
.br
\fImode\fP 0: use dell-smm-hwmon(i8k) kernel module
.br
\fImode\fP 1: use direct SMM BIOS calls.
.TP
\fB--discrete_gpu_mode\fR <\fImode\fP>
Monitoring mode of discrete GPU temp. Default is 1.
.br
\fImode\fP 0: integrated GPU - monitor cpu_temp only
.br
\fImode\fP 1: use temp = max(cpu_temp, gpu_temp) in fan control logic (highly recommended for laptops with discrete gpu)
.br
\fImode\fP 2: use separate fans control (for laptops with dedicated fan for discrete gpu)
.TP
\fB--fan_ctrl_logic_mode\fR <\fImode\fP>
Set fan control logic. Default is 0.
.br
\fImode\fP 0: full control logic (see above)
.br
\fImode\fP 1 (default): allow BIOS to control fans. Stop/start fans оnly at boundary temps(see above)
.TP
\fB--bios_disable_method\fR <\fImethod\fP>
Set disable BIOS fans control method. Not always works. Default is 0.
.br
\fImethod\fP 0: don't disablе BIOS fans control 
.br
\fImethod\fP 1: use DISABLE_BIOS_METHOD1
.br
\fImethod\fP 2: use DISABLE_BIOS_METHOD2
.TP
\fB--period\fR <\fImilliseconds\fP>
Specifies the interval at which the daemon checks the hardware status. Default is 1000 milliseconds.
.TP
\fB--fan_check_period\fR <\fImilliseconds\fP>
Specifies the interval at which the daemon checks the fans speed and set it. Used only when \fBbios_disable_method 0\fR. Default is 1000 milliseconds.
.TP
\fB--jump_timeout\fR <\fImilliseconds\fP>
Specifies the interval at which the daemon ignore cpu temperature, after an abnormal temperature jump detected. Default is 2000 milliseconds.
.TP
\fB--jump_temp_delta\fR <\fIcelsius\fP>
Temperature difference between checks, at which the new value is considered abnormal. Default is 5° celsius. 
.TP
\fB--t_low\fR <\fIcelsius\fP>
Temperature threshold "low" in celsius. Default is 45° celsius.
.TP
\fB--t_mid\fR <\fIcelsius\fP>
Temperature threshold "middle" in celsius. Default is 60° celsius.
.TP
\fB--t_high\fR <\fIcelsius\fP>
Temperature threshold "high" in celsius. Default is 80° celsius. 
.TP
\fB--t_low_fan\fR <\fIfan_state_id\fP>
Fan state corresponding to temperature threshold "low". Default is 0 (OFF).
.TP
\fB--t_mid_fan\fR <\fIfan_state_id\fP>
Fan state corresponding to temperature threshold "middle". Default is 1 (LOW).
.TP
\fB--t_high_fan\fR <\fIfan_state_id\fP>
Fan state corresponding to temperature threshold "high". Default is 2 (HIGH).
.TP
\fB--gpu_fan_id\fR <\fIfan_id\fP>
GPU fan_id, sometimes determined automatically through SMM BIOS. Used only when \fBdiscrete_gpu_mode\fR is 2.
0 = right, 1 = left. Default is 9 (autodetect).  
.TP    
\fB--fans_count\fR <\fInumber\fP>
Set number of fans in your device. Normaly autodetected automatically through SMM BIOS. Default is 9 (autodetect).  

.SH "CONFIGURATION"
.LP
dell-fan-mon has builtin default values of all options. User can see current values using \fB\-\-help\fR option. 
.LP
All options with double dash described before can be changed in /etc/dell-fan-mon.conf using same name.
.SH "FILES"
.LP
\fI/etc/dell-fan-mon.conf\fP
.SH "AUTHOR"
.LP
ace (https://github.com/ru-ace)
.SH "CREDITS"
.LP
Code for access to temp and fan control using dell-smm-hwmon(i8k) kernel module from \fIhttps://github.com/vitorafsr/i8kutils\fP
.br
Code for enable/disable BIOS fan control and direct SMM BIOS calls from \fIhttps://github.com/clopez/dellfan\fP
.SH "COPYRIGHT"
.LP
dell-fan-mon, scripts and other files are
distributed under the GNU General Public License (GPL).
.br
On Debian GNU/Linux systems, the complete text of the GNU General
Public License can be found in `/usr/share/common-licenses/GPL'.
